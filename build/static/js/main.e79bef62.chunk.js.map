{"version":3,"sources":["components/Panel/PanelEntity/PanelEntity.jsx","components/Panel/Panel.jsx","components/Entity/Entity.jsx","components/Entity/getBasicParams.js","components/EntityList/usePopulateDetails.js","components/EntityList/EntityList.jsx","components/EntityList/usePopulateEntities.js","App.js","reportWebVitals.js","index.js","api.js"],"names":["PanelEntity","panel","console","log","visible","styles","className","style","name","type","title","Panel","children","panels","left","right","bottom","top","Boolean","length","map","index","Entity","setSelected","item","rectDotLeft","rectDotTop","entityName","property","setName","getBasicParams","onClick","getAttributes","entity","elem","data","attributes","getNumber","value","defaultValue","getCssStyles","atrs","css","cssName","add","prettyName","defaultStyle","styleValue","getEntityNameForPanelDetails","setLoading","atr","replace","retrievePanels","a","extractPanel","panelProperty","regex","panelName","getDetails","res","numberPanels","panelItem","result","j","push","EntityList","useState","selected","setPanels","loading","entities","setEntities","useEffect","getAll","then","reduce","acc","JSON","parse","objects","catch","e","addEntityItem","state","usePopulateEntities","firstsResponse","panelEntity","panelsReg","requests","usePopulateDetails","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","api","axios","create","credentials","baseURL","headers","Authorization","Buffer","from","toString","url","get"],"mappings":"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","file":"static/js/main.e79bef62.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PanelEntity.css\";\n\nconst PanelEntity = ({ panel }) => {\n  console.log(panel);\n  const isVisible = panel.visible === \"True\";\n  if (!isVisible) return null;\n  console.log(panel.styles);\n  return (\n    <div className=\"item-wrapper\" style={panel.styles}>\n      <div>Name: {panel.name}</div>\n      <div>Type:{panel.type}</div>\n      <div>Title:{panel.title}</div>\n    </div>\n  );\n};\nexport default PanelEntity;\n","import React from \"react\";\nimport \"./Panel.css\";\nimport PanelEntity from \"./PanelEntity/PanelEntity\";\nconst Panel = ({ children, panels }) => {\n  if (!panels) return <div className=\"entity-field\">{children}</div>;\n  const { left, right, bottom, top } = panels;\n\n  return (\n    <div className=\"upper-wrapper\">\n      {Boolean(left) && left.length && (\n        <div className=\"left-side\">\n          {left.map((panel, index) => (\n            <PanelEntity key={index} panel={panel} />\n          ))}\n        </div>\n      )}\n      <div className=\"middle-side\">\n        {Boolean(top) && top.length && (\n          <div className=\"top-field\">\n            {\" \"}\n            {top.map((panel, index) => (\n              <PanelEntity key={index} panel={panel} />\n            ))}\n          </div>\n        )}\n        <div className=\"entity-field\">{children}</div>\n        {Boolean(bottom) && bottom.length && (\n          <div className=\"bottom-field\">\n            {bottom.map((panel, index) => (\n              <PanelEntity key={index} panel={panel} />\n            ))}\n          </div>\n        )}\n      </div>\n      {Boolean(right) && right.length && (\n        <div className=\"right-side\">\n          {\" \"}\n          {right.map((panel, index) => (\n            <PanelEntity key={index} panel={panel} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Panel;\n","import React from \"react\";\nimport \"./Entity.css\";\nimport { getBasicParams } from \"./getBasicParams\";\nconst Entity = ({ setSelected, item }) => {\n  const { left, top, name, property } = getBasicParams(item);\n\n  return (\n    <div\n      className=\"EntityItem\"\n      style={{ left, top }}\n      onClick={() => setSelected(item)}\n    >\n      <span>{name}</span>\n    </div>\n  );\n};\nexport default Entity;\n","export const getBasicParams = (item) => {\n  return {\n    left: item.rectDotLeft,\n    top: item.rectDotTop,\n    name: item.entityName,\n    property: item.setName,\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport { getDetails } from \"../../api\";\n\nconst getAttributes = (entity) => {\n  const [elem] = entity.data;\n  if (!elem) return;\n  return elem.attributes;\n};\nconst getNumber = (entity) => {\n  const value = entity[\"value\"];\n  const defaultValue = entity[\"default\"];\n  if (!value && !defaultValue) return;\n  if (!value) return defaultValue;\n  return value;\n};\nconst getCssStyles = (atrs) => {\n  const css = (property, cssName, add = false) => {\n    const prettyName = cssName || property;\n    const defaultStyle = atrs[property][\"default\"];\n    const styleValue = atrs[property][\"value\"];\n    if (!styleValue && !defaultStyle) return;\n    if (!styleValue) return { [prettyName]: defaultStyle };\n    return { [prettyName]: Boolean(add) ? styleValue + add : styleValue };\n  };\n  return {\n    ...css(\"background-color\", \"backgroundColor\"),\n    ...css(\"width\", false, \"px\"),\n    ...css(\"border\"),\n    ...css(\"border-color\", \"borderColor\"),\n    ...css(\"font\"),\n    ...css(\"font-color\", \"fontColor\"),\n    ...css(\"height\", false, \"px\"),\n  };\n};\n\nconst getEntityNameForPanelDetails = (entity, setLoading) => {\n  const regex = /object:/gi;\n  const atr = getAttributes(entity);\n  if (!atr) {\n    setLoading(false);\n    return;\n  }\n  const name = atr.children && atr.children.value;\n  return name.replace(regex, \"\");\n};\nconst retrievePanels = async (attributes) => {\n  const extractPanel = async (panelProperty) => {\n    if (!attributes[panelProperty].value) return;\n    const regex = /panel:/gi;\n    const panelName = attributes[panelProperty].value.replace(regex, \"\");\n    const res = await getDetails(\"panel\", panelName);\n    const atrs = getAttributes(res);\n    const numberPanels = atrs[\"window-count\"][\"value\"];\n    const panelItem = {\n      name: getNumber(atrs.name),\n      title: getNumber(atrs.title),\n      type: getNumber(atrs.type),\n      visible: getNumber(atrs.visible),\n      styles: getCssStyles(atrs),\n    };\n    if (numberPanels === 1) return [{ ...panelItem }];\n    const result = [];\n    for (let j = 0; j < numberPanels; j++) {\n      result.push({ ...panelItem });\n    }\n    return result;\n  };\n  return {\n    top: await extractPanel(\"top-panel\"),\n    bottom: await extractPanel(\"bottom-panel\"),\n    left: await extractPanel(\"left-panel\"),\n    right: await extractPanel(\"right-panel\"),\n  };\n};\n\nexport const usePopulateDetails = (selected, setPanels, setLoading) => {\n  useEffect(() => {\n    if (!selected) return;\n    setLoading(true);\n    const { setName, entityName } = selected;\n    const requests = async () => {\n      const firstsResponse = await getDetails(setName, entityName);\n\n      const panelEntity = getEntityNameForPanelDetails(\n        firstsResponse,\n        setLoading\n      );\n      if (!panelEntity) return;\n      const panelsReg = await getDetails(\"object\", panelEntity);\n      const panels = await retrievePanels(getAttributes(panelsReg));\n      setPanels(panels);\n      setLoading(false);\n    };\n    requests();\n  }, [selected, setPanels, setLoading]);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { usePopulateEntities } from \"./usePopulateEntities\";\nimport \"./EntityList.css\";\nimport Panel from \"../Panel/Panel\";\nimport Entity from \"../Entity/Entity\";\nimport { usePopulateDetails } from \"./usePopulateDetails\";\n\nconst EntityList = () => {\n  const [selected, setSelected] = useState(\"\");\n  const [panels, setPanels] = useState();\n  const [loading, setLoading] = useState(\"false\");\n\n  const { entities, addEntityItem } = usePopulateEntities(setLoading);\n  usePopulateDetails(selected, setPanels, setLoading);\n  useEffect(() => {\n    setPanels();\n  }, [selected]);\n\n  if (loading) {\n    return (\n      <div className=\"Layout\">\n        <div className=\"Loading\">Loading</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"Layout\">\n      <Panel panels={panels} selected={selected}>\n        {entities.map((item, index) => (\n          <Entity key={index} item={item} setSelected={setSelected} />\n        ))}\n      </Panel>\n    </div>\n  );\n};\nexport default EntityList;\n","import { useEffect, useState } from \"react\";\nimport { getAll } from \"../../api\";\n\n//const initialPage = \"/apmPage/entities/page1\";\nconst initialPage = \"/apmPage/entities/.*\";\n\nexport const usePopulateEntities = (setLoading) => {\n  const [entities, setEntities] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    getAll(initialPage)\n      .then((res) => {\n        const result = res.data.reduce(\n          (acc, item) => [...acc, ...JSON.parse(item.attributes.objects)],\n          []\n        );\n        setEntities(result);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(`Error-${e}`);\n      });\n  }, [setLoading]);\n  const addEntityItem = (entity) => setEntities((state) => [...state, entity]);\n\n  return { entities, addEntityItem };\n};\n","import \"./App.css\";\nimport EntityList from \"./components/EntityList/EntityList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EntityList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  credentials: \"same-origin\",\n  baseURL: \"https://52.243.97.180:8089/servicesNS/nobody/apmTest2/api/sets\",\n  headers: {\n    Authorization: `Basic ${Buffer.from(`oleksi:sHs7&%s5B0^5`, \"utf8\").toString(\n      \"base64\"\n    )}`,\n  },\n});\n\nexport const getAll = (url) => api.get(url);\n\nexport const getDetails = (property, name) =>\n  api.get(`/${property}/entities/${name}`);\n"],"sourceRoot":""}